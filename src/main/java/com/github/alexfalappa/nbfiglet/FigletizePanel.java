/*
 * Copyright 2019 Alessandro Falappa.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.alexfalappa.nbfiglet;

import java.io.IOException;

import com.github.dtmo.jfiglet.FigFontResources;
import com.github.dtmo.jfiglet.FigletRenderer;

/**
 * Plugin settings UI in Option Dialog.
 *
 * @author Alessandro Falappa
 */
final class FigletizePanel extends javax.swing.JPanel {

    private final FigletizeOptionsPanelController controller;
    private FigletRenderer figRend;

    FigletizePanel(FigletizeOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lFont = new javax.swing.JLabel();
        cbFont = new javax.swing.JComboBox<>();
        lPreview = new javax.swing.JLabel();
        scroller = new javax.swing.JScrollPane();
        taPreview = new javax.swing.JTextArea();

        org.openide.awt.Mnemonics.setLocalizedText(lFont, org.openide.util.NbBundle.getMessage(FigletizePanel.class, "FigletizePanel.lFont.text")); // NOI18N

        cbFont.setModel(new javax.swing.DefaultComboBoxModel<String>(FigletPrefs.fontNames));
        cbFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFontActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lPreview, org.openide.util.NbBundle.getMessage(FigletizePanel.class, "FigletizePanel.lPreview.text")); // NOI18N

        taPreview.setEditable(false);
        taPreview.setColumns(40);
        taPreview.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        taPreview.setRows(8);
        scroller.setViewportView(taPreview);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lFont)
                    .addComponent(lPreview))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scroller))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lFont)
                    .addComponent(cbFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lPreview)
                    .addComponent(scroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFontActionPerformed
        try {
            figRend = new FigletRenderer(FigFontResources.loadFigFontResource(FigletPrefs.fontFileNames[cbFont.getSelectedIndex()]));
            taPreview.setText(figRend.renderText(FigletPrefs.fontNames[cbFont.getSelectedIndex()].concat(" - abc ABC 123")));
            taPreview.setCaretPosition(0);
            controller.changed();
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_cbFontActionPerformed

    void load() {
        cbFont.setSelectedIndex(FigletPrefs.loadFontIndex());
    }

    void store() {
        FigletPrefs.storeFontIndex(cbFont.getSelectedIndex());
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFont;
    private javax.swing.JLabel lFont;
    private javax.swing.JLabel lPreview;
    private javax.swing.JScrollPane scroller;
    private javax.swing.JTextArea taPreview;
    // End of variables declaration//GEN-END:variables
}
